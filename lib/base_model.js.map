{"version":3,"file":"base_model.js","names":["_mobx","require","_inflection","_filter","_interopRequireDefault","_uniqueId","_result","_init_attributes","_set_attributes","_init_relations","_set_relations","initObservables","target","observables","isObservableArray","collection","extendObservable","observable","array","deep","BaseModel","attributes","relations","id","lastSetRequestId","get","items","l","length","i","toString","set","options","arguments","undefined","modelJson","topLevelJson","requestId","uniqueId","model","transaction","push","remove","splice","indexOf","all","slice","addClassAction","actionName","method","Object","defineProperty","bind","configurable","addAction","prototype","constructor","initAttributes","initRelations","onInitialize","setAttributes","setRelations","urlRoot","jsonKey","onDestroy","removeSelfFromCollection","destroyDependentRelations","removeSelfFromRelations","relationsToDestroy","filter","relation","reverseRelation","forEach","isHasMany","propertyName","relatedModel","isHasOne","relationsToRemoveFrom","removeMethodName","toJSON","attributeValues","keys","reduce","values","attributeName","relationValues","_ref","type","foreignKey","camelizedForeignKey","camelize","map","_urlRoot","tableize","modelName","name","value","_jsonKey","underscore","_default","exports","default"],"sources":["../src/base_model.js"],"sourcesContent":["import {\r\n    transaction,\r\n    extendObservable,\r\n    isObservableArray,\r\n    observable\r\n} from \"mobx\";\r\nimport { tableize, underscore, camelize } from \"inflection\";\r\nimport filter from \"lodash/filter\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\nimport result from \"lodash/result\";\r\n\r\nimport initAttributes from \"./init_attributes\";\r\nimport setAttributes from \"./set_attributes\";\r\nimport initRelations from \"./init_relations\";\r\nimport setRelations from \"./set_relations\";\r\n\r\n/*\r\n * This is a hack to allow each model that extends\r\n * BaseModel to have its own observable collection. Model is\r\n * assigned an observable collection when first instance of model is\r\n * created or when Model.all() method is called\r\n */\r\nconst initObservables = function(target) {\r\n    if (\r\n        !target.observables ||\r\n        !isObservableArray(target.observables.collection)\r\n    ) {\r\n        target.observables = {};\r\n        extendObservable(target.observables, {\r\n            collection: observable.array([],{deep:false})\r\n        });\r\n    }\r\n};\r\n\r\nclass BaseModel {\r\n    static attributes = {};\r\n    static relations = [];\r\n    // static observables = {};\r\n\r\n    id = null;\r\n    lastSetRequestId = null;\r\n\r\n    // static config = function(options = {}) {\r\n    //   let { models } = options;\r\n    //   this.models = models;\r\n    // };\r\n\r\n    /*\r\n   * NOTE: we access internal mobservable array of values to\r\n   * prevent notifying observers when we're just getting single\r\n   * value. This way we'll prevent re-rendering components displaying\r\n   * single model when collection changes\r\n   */\r\n    static get = function(id) {\r\n        let items = this.observables?.collection;\r\n        if (items && isObservableArray(items)) {\r\n            let l = items.length;\r\n            for (var i = 0; i < l; i++) {\r\n                if (items[i].id.toString() === id.toString()) return items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static set = function(options = {}) {\r\n        // console.log('set static', this.name)\r\n\r\n        let { modelJson, topLevelJson, requestId } = options;\r\n\r\n        /*\r\n      requestId is used to allow models to \r\n      prevent loops when setting same attributes\r\n      multiple times, we set one if none is set\r\n     */\r\n        if (!requestId) requestId = uniqueId(\"request_\");\r\n\r\n        /*\r\n     * topLevelJson is used to get json for models referenced by ids\r\n     */\r\n        if (!topLevelJson) topLevelJson = modelJson;\r\n\r\n        let model = this.get(modelJson.id);\r\n\r\n        transaction(() => {\r\n            if (!model) {\r\n                model = new this({\r\n                    modelJson,\r\n                    topLevelJson,\r\n                    requestId\r\n                });\r\n\r\n                this.observables.collection.push(model);\r\n            }\r\n\r\n            model.set({ modelJson, topLevelJson, requestId });\r\n        });\r\n\r\n        // console.log('set', model)\r\n\r\n        return model;\r\n    };\r\n\r\n    static remove = function(model) {\r\n        if (\r\n            this.observables &&\r\n            isObservableArray(this.observables.collection)\r\n        ) {\r\n            this.observables.collection.splice(\r\n                this.observables.collection.indexOf(model),\r\n                1\r\n            );\r\n        }\r\n    };\r\n\r\n    static all = function() {\r\n        initObservables(this);\r\n        return this.observables.collection.slice();\r\n    };\r\n\r\n    static addClassAction(actionName, method) {\r\n        Object.defineProperty(this, actionName, {\r\n            get: function() {\r\n                return method.bind(this);\r\n            },\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    static addAction(actionName, method) {\r\n        Object.defineProperty(this.prototype, actionName, {\r\n            get: function() {\r\n                return method.bind(this);\r\n            },\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    constructor(options = {}) {\r\n        let { modelJson, topLevelJson, requestId } = options;\r\n\r\n        initObservables(this.constructor);\r\n\r\n        if (modelJson && modelJson.id) {\r\n            this.id = modelJson.id;\r\n        }\r\n\r\n        initAttributes({ model: this });\r\n        initRelations({ model: this });\r\n\r\n        this.onInitialize();\r\n    }\r\n\r\n    set(options = {}) {\r\n        let { requestId, modelJson, topLevelJson } = options;\r\n        let model = this;\r\n\r\n        if (!requestId) requestId = uniqueId(\"request_\");\r\n\r\n        if (this.lastSetRequestId === requestId) {\r\n            return;\r\n        } else {\r\n            this.lastSetRequestId = requestId;\r\n        }\r\n\r\n        transaction(() => {\r\n            setAttributes({ model, modelJson });\r\n\r\n            setRelations({\r\n                model,\r\n                requestId,\r\n                modelJson,\r\n                topLevelJson\r\n            });\r\n        });\r\n    }\r\n\r\n    get urlRoot() {\r\n        return this.constructor.urlRoot;\r\n    }\r\n\r\n    get jsonKey() {\r\n        return this.constructor.jsonKey;\r\n    }\r\n\r\n    onInitialize() {}\r\n\r\n    onDestroy() {\r\n        transaction(() => {\r\n            this.removeSelfFromCollection();\r\n            this.destroyDependentRelations();\r\n            this.removeSelfFromRelations();\r\n        });\r\n    }\r\n\r\n    removeSelfFromCollection() {\r\n        this.constructor.remove(this);\r\n    }\r\n\r\n    destroyDependentRelations() {\r\n        let relationsToDestroy = filter(\r\n            this.constructor.relations,\r\n            relation => {\r\n                let reverseRelation = relation.reverseRelation;\r\n                return (\r\n                    reverseRelation &&\r\n                    reverseRelation.onDestroy === \"destroyRelation\"\r\n                );\r\n            }\r\n        );\r\n\r\n        relationsToDestroy.forEach(relation => {\r\n            if (relation.isHasMany) {\r\n                this[relation.propertyName].slice().forEach(relatedModel => {\r\n                    relatedModel.onDestroy();\r\n                });\r\n            } else if (relation.isHasOne) {\r\n                this[relation.propertyName].onDestroy();\r\n            }\r\n        });\r\n    }\r\n\r\n    removeSelfFromRelations() {\r\n        let relationsToRemoveFrom = filter(\r\n            this.constructor.relations,\r\n            relation => {\r\n                let reverseRelation = relation.reverseRelation;\r\n                return (\r\n                    reverseRelation &&\r\n                    reverseRelation.onDestroy === \"removeSelf\"\r\n                );\r\n            }\r\n        );\r\n\r\n        relationsToRemoveFrom.forEach(relation => {\r\n            let removeMethodName = relation.reverseRelation.removeMethodName;\r\n\r\n            if (relation.isHasMany) {\r\n                this[relation.propertyName].slice().forEach(relatedModel => {\r\n                    if (relatedModel[removeMethodName]) {\r\n                        relatedModel[removeMethodName](this);\r\n                    }\r\n                });\r\n            } else if (relation.isHasOne) {\r\n                // console.log(relation.propertyName, removeMethodName, this[relation.propertyName])\r\n                if (\r\n                    this[relation.propertyName] &&\r\n                    this[relation.propertyName][removeMethodName]\r\n                ) {\r\n                    this[relation.propertyName][removeMethodName](this);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    toJSON() {\r\n        const { id, constructor } = this;\r\n        const { attributes, relations } = constructor;\r\n\r\n        // collect attributes\r\n        const attributeValues = Object.keys(attributes || {}).reduce(\r\n            (values, attributeName) => {\r\n                values[attributeName] = this[attributeName];\r\n                return values;\r\n            },\r\n            {}\r\n        );\r\n\r\n        // collect relation models id\r\n        const relationValues = (relations || []).reduce(\r\n            (values, { type, propertyName, foreignKey }) => {\r\n                const camelizedForeignKey = camelize(foreignKey, true);\r\n\r\n                if (type === \"hasMany\") {\r\n                    values[camelizedForeignKey] = (this[propertyName] || [])\r\n                        .slice()\r\n                        .map(model => model.id);\r\n                }\r\n\r\n                if (type === \"hasOne\") {\r\n                    values[camelizedForeignKey] = (this[propertyName] || {}).id;\r\n                }\r\n\r\n                return values;\r\n            },\r\n            {}\r\n        );\r\n\r\n        return {\r\n            id,\r\n            ...attributeValues,\r\n            ...relationValues\r\n        };\r\n    }\r\n}\r\n\r\nObject.defineProperty(BaseModel, \"urlRoot\", {\r\n    get: function() {\r\n        return this._urlRoot\r\n            ? this._urlRoot\r\n            : \"/\" + tableize(this.modelName || this.name);\r\n    },\r\n    set: function(value) {\r\n        this._urlRoot = value;\r\n    },\r\n    configurable: true\r\n});\r\n\r\nObject.defineProperty(BaseModel, \"jsonKey\", {\r\n    get: function() {\r\n        return this._jsonKey\r\n            ? this._jsonKey\r\n            : underscore(this.modelName || this.name);\r\n    },\r\n    set: function(value) {\r\n        this._jsonKey = value;\r\n    },\r\n    configurable: true\r\n});\r\n\r\nexport default BaseModel;\r\n"],"mappings":"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","ignoreList":[]}